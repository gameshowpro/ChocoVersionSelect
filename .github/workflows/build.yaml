on:
  push:
    branches:
      - main
    paths:
      - 'version.json'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  Build_And_Package:
    name: Build and package
    runs-on: windows-latest
    permissions:
      contents: write
    strategy:
      matrix:
        ChannelName:
        - Release

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      BuildConfiguration: Release
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      PROJECT_NAME: ChocoVersionSelect
      PROJECT_PATH: .\src\ChocoVersionSelect.csproj
      PUBLISH_PATH: .\src\bin\public\Release
      ASSETS_PATH: .\build\chocolatey\ChocoVersionSelect
      NUSPEC_TARGET_PATH: .\src\bin\public\Release\ChocoVersionSelect.nuspec
      NUPKG_TARGET_PATH: .\packages

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Use .NET 8.0.x
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'ga'

    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@v0.4.1
      with:
        setAllVars: true

    - name: Create Directory for Channel
      shell: pwsh
      run: mkdir ${{ github.workspace }}\${{ matrix.ChannelName }}

    - name: Add Version File to Artifact
      shell: pwsh
      run : |
        New-Item -Path ${{ github.workspace }}\${{ matrix.ChannelName }} -Name 'version.txt' -ItemType 'file' -Value "$env:GitBuildVersionSimple"

    - name: Build release ChocoVersionSelect
      run: |
        dotnet restore $env:PROJECT_PATH
        dotnet publish $env:PROJECT_PATH -c $env:BuildConfiguration --output $env:PUBLISH_PATH
      if:  ${{ success() && matrix.ChannelName  == 'Release' }}
    
    - name: Gather chocolatey files
      shell: pwsh
      run: |
        (Get-Content (Join-Path $env:ASSETS_PATH 'publish.nuspec')) `
        -replace "{version}", $env:NBGV_ChocolateyPackageVersion `
        -replace "{packageId}", $env:PROJECT_NAME |
        Set-Content $env:NUSPEC_TARGET_PATH
        $toolsPath = Join-Path $env:PUBLISH_PATH 'tools'
        New-Item -Path $toolsPath -ItemType Directory
        Get-ChildItem -Path $env:ASSETS_PATH -File -Filter *.ps1 |
        ForEach-Object { `
          (Get-Content $_.FullName) `
            -replace "{version}", $env:NBGV_ChocolateyPackageVersion `
            -replace "{packageId}", $env:PROJECT_NAME |
            Set-Content (Join-Path $toolsPath $_.Name) `
        }
        Copy-Item "$env:ASSETS_PATH\*.ignore" $env:PUBLISH_PATH
        exit 0

    - name: Pack
      shell: pwsh
      run: |
        New-Item -Path $env:NUPKG_TARGET_PATH -ItemType Directory
        choco pack $env:NUSPEC_TARGET_PATH --version $env:NBGV_ChocolateyPackageVersion --outputdirectory $env:NUPKG_TARGET_PATH
        exit ($? ? 0 : 1)

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: chocolatey-package
        path: ${{ env.NUPKG_TARGET_PATH }}\*.nupkg

    - name: Run latest-tag
      uses: EndBug/latest-tag@latest
      with:
        description: "v($env:GitBuildVersionSimple)"

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ($Path -replace (${{ env.NUPKG_TARGET_PATH }}/*.nupkg) '\\','/')