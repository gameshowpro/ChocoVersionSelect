on:
  push:
    branches:
      - main
    paths:
      - 'version.json'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  Build_And_Package:
    name: Build and package
    runs-on: windows-latest
    strategy:
      matrix:
        ChannelName:
        - Release

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      BuildConfiguration: Release
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      PROJECT_NAME: ChocoVersionSelect
      PROJECT_PATH: .\src\ChocoVersionSelect.csproj
      PUBLISH_PATH: .\src\bin\public\Release
      ASSETS_PATH: .\build\chocolatey
      NUSPEC_TARGET_PATH: ${{ format('{0}\{1}.nuspec', env.PUBLISH_PATH, env.PROJECT_NAME) }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Use .NET 8.0.x
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'preview'

    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@v0.4.1
      with:
        setCommonVars: true

    - run: echo "BuildNumber - ${{ env.GitBuildVersionSimple }}"

    - name: Create Directory for Channel
      shell: pwsh
      run: mkdir ${{ github.workspace }}\${{ matrix.ChannelName }}

    - name: Add Version File to Artifact
      shell: pwsh
      run : |
        New-Item -Path ${{ github.workspace }}\${{ matrix.ChannelName }} -Name "version.txt" -ItemType "file" -Value "${{ env.GitBuildVersionSimple }}"

    - name: Build release ChocoVersionSelect
      run: |
        dotnet restore ${{ env.PROJECT_PATH }}
        dotnet publish ${{ env.PROJECT_PATH }} -c ${{ env.BuildConfiguration }} --output ${{ env.PUBLISH_PATH }}
      if:  ${{ success() && matrix.ChannelName  == 'Release' }}
    
    - name: Gather chocolatey files
      shell: pwsh
      run: |
        $packageAssetsPath = Join-Path $env.ASSETS_PATH $env.PROJECT_NAME
        (Get-Content (Join-Path env.ASSETS_PATH publish.nuspec)) `
        -replace "{version}", $env.NBGV_SemVer1 `
        -replace "{packageId}", $env.PROJECT_NAME |
        Set-Content $env.NUSPEC_TARGET_PATH
        $toolsPath = Join-Path $env.PUBLISH_PATH tools
        New-Item -Path $toolsPath -ItemType Directory
        Get-ChildItem -Path $packageAssetsPath -File -Filter *.ps1 |
        ForEach-Object { `
          (Get-Content $_.FullName) `
            -replace "{version}", $env.NBGV_SemVer1 `
            -replace "{packageId}", $env.PROJECT_NAME |
            Set-Content (Join-Path $toolsPath $_.Name) `
        }
        Copy-Item "$packageAssetsPath\*.ignore" $env.PUBLISH_PATH
        exit 0

