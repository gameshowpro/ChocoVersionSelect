<Application x:Class="ChocoVersionSelect.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ChocoVersionSelect">
    <Application.Resources>
        <LinearGradientBrush x:Key="IconAccentBackgroundBrush">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#1899e0"/>
                <GradientStop Color="#047dd3" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GreenAccentBackgroundBrush">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#00c020"/>
                <GradientStop Color="#009000" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <CornerRadius x:Key="CornerRadius" TopLeft="2" TopRight="2" BottomLeft="2" BottomRight="2"/>
        <Style TargetType="Window" x:Key="WindowStyle">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="WindowStyle" Value="ThreeDBorderWindow"/>
            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsActive" Value="True">
                    <Setter Property="Background" Value="{DynamicResource WindowBackgroundActiveBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Border" x:Key="BorderItem">
            <Setter Property="Background" Value="{DynamicResource ListItemBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ListItemBorderBrush}"/>
            <Setter Property="CornerRadius" Value="{StaticResource CornerRadius}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ListItemBackgroundOverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe Variable"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="TextBlockTitle">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0 15 0 10"/>
        </Style>
        <Style TargetType="ScrollBar" BasedOn="{StaticResource {x:Type ScrollBar}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
        <ControlTemplate x:Key="Spinner">
            <Path Fill="{DynamicResource TextBrush}">
                <Path.Data>
                    <PathGeometry Figures="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z">
                        <PathGeometry.Transform>
                            <RotateTransform x:Name="RotateTransform" CenterX="12" CenterY="12"/>
                        </PathGeometry.Transform>
                    </PathGeometry>
                </Path.Data>
            </Path>
            <ControlTemplate.Triggers>
                <Trigger Property="IsVisible" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Name="StartRotate">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" To="360" RepeatBehavior="Forever" Duration="0:0:2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="StartRotate"/>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ExpanderHeader.Up"
           TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderThemePadding}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel Margin="{TemplateBinding Padding}" Background="Transparent" SnapsToDevicePixels="False">
                                <Path x:Name="Arrow" DockPanel.Dock="Right" Margin="10 0" VerticalAlignment="Center" Data="M 0,1 L 5.5,6.2 L 11,1" SnapsToDevicePixels="false" Stroke="{TemplateBinding Foreground}" StrokeThickness="1">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="180" />
                                    </Path.LayoutTransform>
                                </Path>
                                <ContentControl DockPanel.Dock="Left"
                                              Margin="20 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,6.2 L 5.5,1 L 11,6.2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="BorderBrush" Value="{DynamicResource ListItemBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource ListItemBackgroundBrush}" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <DockPanel x:Name="ExpanderRoot">
                                <Border x:Name="HeaderSite" 
                                    Style="{StaticResource BorderItem}"
                                    DockPanel.Dock="Top"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True">
                                    <ToggleButton x:Name="ToggleSite"
                                              Style="{StaticResource ExpanderHeader.Up}"
                                              Padding="5"                                             
                                              Content="{TemplateBinding Header}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              UseLayoutRounding="False">
                                    </ToggleButton>
                                </Border>
                                <Border x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Style="{StaticResource BorderItem}"
                                    BorderThickness="1 0 1 1"
                                    CornerRadius="0 0 2 2"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    UseLayoutRounding="True"
                                    Visibility="Collapsed">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Cursor="{TemplateBinding Cursor}"
                                                  UseLayoutRounding="False" />
                                </Border>
                            </DockPanel>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="HeaderSite" Property="CornerRadius" Value="2 2 0 0" />
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="20 5" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Style="{StaticResource BorderItem}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentControl x:Name="PART_ContentPresenter"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ListItemBackgroundOverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value=".7" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="HeaderButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Padding" Value="10 5" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HeaderButtonMouseOverBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
